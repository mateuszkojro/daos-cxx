cmake_minimum_required(VERSION 3.10)

project(daos-cxx 
        DESCRIPTION "DAOS bindings for c++"
        LANGUAGES C CXX
)

option(DAOS_DIR "Location of installed libdaos" "OFF")

if(${DAOS_DIR} STREQUAL "OFF")
    # Provided DAOS src
    set(DAOS_INSTALL_DIR ${CMAKE_SOURCE_DIR}/lib/daos-cxx/lib/daos/install/)
else()
    set(DAOS_INSTALL_DIR ${DAOS_DIR})
endif()

message(DAOS\ install\ dir:  ${DAOS_INSTALL_DIR})

add_library(daos-cxx
    # Implemented interfaces
    ./include/interfaces.h

    # Library
    ./include/Pool.h src/Pool.cxx 
    ./include/Container.h src/Container.cxx
    ./include/Errors.h 
    ./include/types.h
    ./include/EventQueue.h src/EventQueue.cxx
    ./include/KeyValue.h src/KeyValue.cxx
    ./include/DAOSObject.h src/DAOSObject.cxx
    ./include/Array.h src/Array.cxx
    ./include/UUID.h src/UUID.cxx
    
    # Mocking
    ./include/DAOSZipkinLog.h
    ./include/mocking.h
    ./include/MockPool.h
    ./include/MockContainer.h
    ./include/MockKeyValue.h
)


set(opentelemetry ./lib/opentelemetry-cpp)
add_subdirectory(${opentelemetry})

set(OPENTELEMETRY_LIBS PUBLIC ${CMAKE_THREAD_LIBS_INIT} opentelemetry_trace opentelemetry_exporter_zipkin_trace)
target_include_directories(daos-cxx PUBLIC ${opentelemetry}/exporters/zipkin/include ${opentelemetry})


target_include_directories(daos-cxx PUBLIC ${DAOS_INSTALL_DIR}/include/)
target_include_directories(daos-cxx PUBLIC include)
target_link_libraries(daos-cxx PUBLIC 
    ${DAOS_INSTALL_DIR}/lib64/libdaos.so 
    ${DAOS_INSTALL_DIR}/lib64/libgurt.so 
    ${DAOS_INSTALL_DIR}/lib64/libdaos_common.so 
    uuid
    ${OPENTELEMETRY_LIBS}
)

